name: CodeQL + Gitleaks with PR Comment (Hardened)

on:
  push:
    branches: [main, staging, dev]
  pull_request:
    branches: [main, staging, dev]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # ✅ ensures full history for CodeQL

    # 🔐 CodeQL
    - name: Set up CodeQL CLI bundle
      run: |
        curl -sL -o codeql-bundle.tar.gz https://github.com/github/codeql-action/releases/download/codeql-bundle-v2.21.2/codeql-bundle-linux64.tar.gz
        mkdir -p $HOME/codeql
        tar -xzf codeql-bundle.tar.gz -C $HOME/codeql
        echo "$HOME/codeql/codeql" >> $GITHUB_PATH
        $HOME/codeql/codeql/codeql version

    - name: Install PNPM
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Initialize CodeQL database
      run: |
        mkdir codeql-db
        $HOME/codeql/codeql/codeql database create codeql-db \
          --language=javascript \
          --source-root=. \
          --command="bash -c \"pnpm run build || true\""

    - name: Run CodeQL analysis
      run: |
        mkdir -p results
        $HOME/codeql/codeql/codeql database analyze \
          --format=sarifv2.1.0 \
          --output=results/javascript.sarif \
          codeql-db \
          codeql/javascript-queries
 
    - name: Upload CodeQL SARIF as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: codeql-report
        path: results/javascript.sarif
        if-no-files-found: warn


    # 🔑 Hardened Gitleaks Step
    - name: Install Gitleaks (Pinned & Verified)
      run: |
        GITLEAKS_VERSION="8.25.1"
        curl -sL -o gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz
        echo "3000d057342489827ee127310771873000b658f2987be7bbd21968ab7443913a  gitleaks.tar.gz" | sha256sum -c -
        tar -xzf gitleaks.tar.gz
        sudo mv gitleaks /usr/local/bin/gitleaks
        gitleaks version

    - name: Run Gitleaks and Save Report
      continue-on-error: true  # ✅ Better than `|| true`
      run: |
        gitleaks detect --source . --report-format json --report-path gitleaks-report.json

    - name: Upload Gitleaks Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: gitleaks-report.json
        if-no-files-found: warn

    - name: Summarize Gitleaks Findings
      id: gitleaks_summary
      run: |
        if [[ -f gitleaks-report.json ]]; then
          count=$(jq length gitleaks-report.json)
          summary=$(jq -r '.[] | "- 🔐 Secret in \(.file) at line \(.line): \(.rule)"' gitleaks-report.json | head -n 10)
        else
          count=0
          summary="No secrets found or report missing."
        fi

        echo "count=$count" >> $GITHUB_OUTPUT
        echo "summary<<EOF" >> $GITHUB_OUTPUT
        echo "$summary" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash

    # 💬 PR Comment
    - name: Comment on PR with Report Links and Summary
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ## 🛡️ Security Scan Summary

          ### 📘 CodeQL
          - Static analysis completed.
          - 💾 [Download CodeQL Report (SARIF)](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ### 🔑 Gitleaks
          - Secrets found: **${{ steps.gitleaks_summary.outputs.count }}**
          <details><summary>Top Matches</summary>

          ```
          ${{ steps.gitleaks_summary.outputs.summary }}
          ```

          </details>
          - 💾 [Download Gitleaks Report (JSON)](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
